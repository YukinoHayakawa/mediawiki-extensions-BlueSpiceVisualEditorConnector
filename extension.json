{
	"name": "BlueSpiceVisualEditorConnector",
	"license-name": "GPL-3.0-only",
	"version": "3.0.0",
	"url": "https://en.wiki.bluespice.com/wiki/Reference:BlueSpiceVisualEditorConnector",
	"author": [
		"Markus Glaser"
	],
	"descriptionmsg": "bs-visualeditorconnector-desc",
	"type": "bluespice",
	"requires": {
		"MediaWiki": ">= 1.31.0"
	},
	"attributes": {
		"BlueSpiceFoundation": {
			"Extensions": {
				"BlueSpiceVisualEditorConnector": {
					"className": "\\BlueSpice\\VisualEditorConnector\\Extension",
					"extPath": "/BlueSpiceVisualEditorConnector",
					"status": "beta",
					"package": "BlueSpice Pro",
					"configDefinitions": {
						"VisualEditorConnectorEnableVisualEditor": "\\BlueSpice\\VisualEditorConnector\\ConfigDefinition\\EnableVisualEditor::getInstance",
						"VisualEditorConnectorWikiTextConverterUrl": "\\BlueSpice\\VisualEditorConnector\\ConfigDefinition\\WikiTextConverterUrl::getInstance"
					}
				}
			}
		},
		"BlueSpiceVisualEditorConnector": {
			"PluginModules": [],
			"TagDefinitions": []
		},
		"BlueSpiceSimpleFarmer": {
			"DynamicConfigurationFactories": {
				"virtualrestparsoiddomain": "\\BlueSpice\\VisualEditorConnector\\SimpleFarmer\\DynamicConfiguration\\VirtualRestConfig::factory"
			}
		},
		"VisualEditor": {
			"PluginModules": [
				"ext.bluespice.visualEditorConnector.plugin"
			]
		}
	},
	"AutoloadNamespaces": {
		"BlueSpice\\VisualEditorConnector\\": "src/"
	},
	"SpecialPages": {
		"VisualEditorConnector": "\\BlueSpice\\VisualEditorConnector\\Special\\VisualEditorConnector"
	},
	"MessagesDirs": {
		"VisualEditorConnector": [
			"i18n"
		]
	},
	"ExtensionMessagesFiles": {
		"SpecialVisualEditorConnectorAlias": "languages/SpecialVisualEditorConnector.alias.php"
	},
	"ResourceModules": {
		"ext.bluespice.visualEditorConnector": {
			"scripts": [
				"ve/init/sa/BlueSpiceTarget.js",
				"ui/widget/TextInputMWVisualEditor.js",
				"bluespice.visualEditorConnector.js"
			],
			"styles": [
				"bluespice.visualEditorConnector.css"
			],
			"dependencies": [
				"ext.visualEditor.core",
				"ext.visualEditor.mediawiki",
				"ext.visualEditor.standalone",
				"ext.visualEditor.core.desktop",
				"ext.visualEditor.mwcore",
				"ext.visualEditor.mwextensions.desktop",
				"ext.visualEditor.icons",
				"ext.bluespice.oojs",
				"oojs-ui",
				"mediawiki.api"
			],
			"messages": [

			]
		},
		"ext.visualEditor.standalone": {
			"scripts": [
				"../../VisualEditor/lib/ve/src/init/sa/ve.init.sa.js",
				"../../VisualEditor/lib/ve/src/init/sa/ve.init.sa.Platform.js",
				"../../VisualEditor/lib/ve/src/init/sa/ve.init.sa.Target.js",
				"../../VisualEditor/lib/ve/src/init/sa/ve.init.sa.DesktopTarget.js"
			],
			"styles": [
				"../../VisualEditor/lib/ve/src/init/sa/styles/ve.init.sa.css"
			],
			"dependencies": [
				"ext.visualEditor.mediawiki"
			]
		},
		"ext.bluespice.visualEditorConnector.plugin": {
			"scripts": [
				"ve-visualeditorconnector/ve.init.bs.CancelEditButton.js",
				"ve-visualeditorconnector/ve.init.bs.HideAfterContent.js"
			],
			"dependencies": [
				"ext.visualEditor.mwcore"
			],
			"messages": [
				"bs-visualeditorconnector-cancel-edit"
			],
			"targets": [
				"desktop",
				"mobile"
			]
		},
		"ext.bluespice.visualEditorConnector.overrides.classes": {
			"@note": "Keep in sync with `bluespice.visualEditorConnector.overrides.js`",
			"scripts": [
				"bs.vec/ui/MWLinkAnnotationInspector.js",
				"bs.vec/ui/MWMediaDialog.js",
				"bs.vec/ui/MWSaveDialog.js",
				"bs.vec/ui/MWTableDialog.js",
				"bs.vec/ui/plugin/MWSaveDialog.js",
				"bs.vec/ui/plugin/MWTableDialog.js"
			],
			"targets": [
				"desktop",
				"mobile"
			]
		},
		"ext.bluespice.visualEditorConnector.overrides": {
			"scripts": "bluespice.visualEditorConnector.overrides.js",
			"@note": "Having 'ext.visualEditor.desktopArticleTarget.init' as a dependency is okay, as it is loaded by VE at every page load",
			"dependencies": [
				"ext.visualEditor.desktopArticleTarget.init"
			]
		},
		"ext.bluespice.visualEditorConnector.tags.classes": {
			"@note": "Keep in sync with `bluespice.visualEditorConnector.tags.js`",
			"scripts": [
				"bs.vec/util/tag/Definition.js",
				"bs.vec/util/tag/Registry.js",
				"bs.vec/ui/widget/GroupListInputWidget.js"
			],
			"targets": [
				"desktop",
				"mobile"
			]
		},
		"ext.bluespice.visualEditorConnector.tags": {
			"scripts": "bluespice.visualEditorConnector.tags.js",
			"@note": "Having 'ext.visualEditor.desktopArticleTarget.init' as a dependency is okay, as it is loaded by VE at every page load",
			"dependencies": [
				"ext.visualEditor.desktopArticleTarget.init"
			],
			"messages": [
				"bs-visualeditorconnector-inspector-tab-common-name",
				"bs-visualeditorconnector-inspector-tab-advanced-name"
			]
		}
	},
	"ResourceFileModulePaths": {
		"localBasePath": "resources",
		"remoteExtPath": "BlueSpiceVisualEditorConnector/resources"
	},
	"config_prefix": "bsg",
	"config": {
		"VisualEditorConnectorEnableVisualEditor": {
			"value": true,
			"descriptionmsg": "bs-visualeditorconnector-enable-visualeditor",
			"public": true
		},
		"VisualEditorConnectorWikiTextConverterUrl": {
			"value": "http://localhost:8000/httpd/",
			"public": true
		}
	},
	"Hooks": {
		"BSSocialModuleDepths": "\\BlueSpice\\VisualEditorConnector\\Hook\\BSSocialModuleDepths\\AddVECModules::callback",
		"BSPageTemplatesModifyTargetUrl": "\\BlueSpice\\VisualEditorConnector\\Hook\\BSPageTemplatesModifyTargetUrl\\UseVisualEditor::callback",
		"BeforePageDisplay": "\\BlueSpice\\VisualEditorConnector\\Hook\\BeforePageDisplay\\AddModules::callback",
		"NamespaceManager::getMetaFields": "\\BlueSpice\\VisualEditorConnector\\Hook\\NamespaceManagerGetMetaFields\\RegisterMetaFields::callback",
		"BSApiNamespaceStoreMakeData": "\\BlueSpice\\VisualEditorConnector\\Hook\\BSApiNamespaceStoreMakeData\\AddData::callback",
		"NamespaceManager::editNamespace": "\\BlueSpice\\VisualEditorConnector\\Hook\\NamespaceManagerEditNamespace\\SetVisualEditorValues::callback",
		"NamespaceManager::writeNamespaceConfiguration": [
			"\\BlueSpice\\VisualEditorConnector\\Hook\\NamespaceManagerWriteNamespaceConfiguration\\WriteToConfiguration::callback"
		]
	},
	"manifest_version": 2
}
